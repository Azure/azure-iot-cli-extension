name: Tox integration tests
on:
  workflow_call:
    inputs:
      python:
        description: 'Python versions'
        type: string
        required: true
        default: '["3.11", "3.10", "3.9", "3.8"]'
      toxenv:
        description: 'Tox envs to run'
        type: string
        required: true
        default: '["ADT", "DPS", "Hub1", "Hub2", "ADU"]'
  workflow_dispatch:
    inputs:
      python:
        description: 'Python versions'
        type: string
        required: true
        default: '["3.11", "3.10", "3.9", "3.8"]'
      toxenv:
        description: 'Tox envs to run'
        type: string
        required: true
        default: '["ADT", "DPS", "Hub1", "Hub2", "ADU"]'

permissions:
  contents: read
  id-token: write

jobs:
  set-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
        python: ${{ inputs.python}}
        toxenv: ${{ inputs.toxenv}}
    steps:
    - name: Set matrix
      id: set-matrix
      run: |
        echo "python values:" $python
        echo "toxenv values:" $toxenv
        
        matrix="{\"py\": $python, \"toxenv\": $toxenv}"
        echo "testing matrix" $matrix

        echo "matrix=$matrix" >> $GITHUB_OUTPUT
  int-test:
    name: Int test ${{ matrix.toxenv }} - python ${{ matrix.py }}
    needs: set-test-matrix
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.set-test-matrix.outputs.matrix)}}
    runs-on: ubuntu-22.04
    env:
        azext_iot_testrg: ${{ secrets.AZEXT_IOT_TESTRG}}
        azext_iot_teststorageaccount: ${{ secrets.AZEXT_IOT_TESTSTORAGEACCOUNT}}
        azext_dt_adx_cluster: ${{ secrets.AZEXT_DT_ADX_CLUSTER}}
        COVERAGE_FILE: .coverage.${{ matrix.toxenv }}-${{ matrix.py }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: 'pip'
          cache-dependency-path: |
            dev_requirements.txt
            setup.py
      - name: Setup tox
        run: pip install tox
      - name: Setup test suite
        run: tox r -e ${{ matrix.toxenv }}-int -vv --notest
      - name: "AZ CLI login"
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      - name: Run test suite
        run: tox r --skip-pkg-install -e ${{ matrix.toxenv }}-int -vv -- -rsx