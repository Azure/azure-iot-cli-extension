# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import ServiceClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.configuration_api_operations import ConfigurationApiOperations
from .operations.device_api_operations import DeviceApiOperations
from .operations.module_api_operations import ModuleApiOperations
from .operations.iot_dps_admin_operations import IotDpsAdminOperations
from .operations.device_twin_api_operations import DeviceTwinApiOperations
from . import models
from azext_iot._constants import VERSION as extver


class IotHubClientConfiguration(AzureConfiguration):
    """Configuration for IotHubClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The subscription identifier.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        # if subscription_id is None:
        #     raise ValueError("Parameter 'subscription_id' must not be None.")
        # if not isinstance(subscription_id, str):
        #     raise TypeError("Parameter 'subscription_id' must be str.")
        if not base_url:
            base_url = 'https://<fully-qualified IoT hub domain name>'

        super(IotHubClientConfiguration, self).__init__(base_url)

        self.add_user_agent('iothubclient/{}'.format(VERSION))
        self.add_user_agent('MicrosoftAzure/IoTPlatformCliExtension/{}'.format(extver))

        self.credentials = credentials
        self.subscription_id = subscription_id


class IotHubClient(object):
    """API for using the IoTHub configuration service

    :ivar config: Configuration for client.
    :vartype config: IotHubClientConfiguration

    :ivar configuration_api: ConfigurationApi operations
    :vartype configuration_api: iothubclient.operations.ConfigurationApiOperations
    :ivar device_api: DeviceApi operations
    :vartype device_api: iothubclient.operations.DeviceApiOperations
    :ivar module_api: ModuleApi operations
    :vartype module_api: iothubclient.operations.ModuleApiOperations
    :ivar iot_dps_admin: IotDpsAdmin operations
    :vartype iot_dps_admin: iothubclient.operations.IotDpsAdminOperations
    :ivar device_twin_api: DeviceTwinApi operations
    :vartype device_twin_api: iothubclient.operations.DeviceTwinApiOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The subscription identifier.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = IotHubClientConfiguration(credentials, subscription_id, base_url)
        self._client = ServiceClient(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2017-11-08-preview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.configuration_api = ConfigurationApiOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.device_api = DeviceApiOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.module_api = ModuleApiOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.iot_dps_admin = IotDpsAdminOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.device_twin_api = DeviceTwinApiOperations(
            self._client, self.config, self._serialize, self._deserialize)
