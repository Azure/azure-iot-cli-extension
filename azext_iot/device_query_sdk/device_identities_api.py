# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import ServiceClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.device_api_operations import DeviceApiOperations
from . import models
from azext_iot._constants import VERSION as extver


class DeviceIdentitiesAPIConfiguration(AzureConfiguration):
    """Configuration for DeviceIdentitiesAPI
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = 'https://<fully-qualified IoT hub domain name>'

        super(DeviceIdentitiesAPIConfiguration, self).__init__(base_url)

        self.add_user_agent('deviceidentitiesapi/{}'.format(VERSION))
        self.add_user_agent('MicrosoftAzure/IoTPlatformCliExtension/{}'.format(extver))

        self.credentials = credentials


class DeviceIdentitiesAPI(object):
    """Use this REST API to manage the devices in the identity registry of an IoT hub. This API enables you to create, update, and delete device identities as well as perform bulk operations. Each API call must include the api-version query parameter as well the authorization header containing a Shared Access Signature token with the appropriate permissions.

    :ivar config: Configuration for client.
    :vartype config: DeviceIdentitiesAPIConfiguration

    :ivar device_api: DeviceApi operations
    :vartype device_api: device_api.operations.DeviceApiOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        self.config = DeviceIdentitiesAPIConfiguration(credentials, base_url)
        self._client = ServiceClient(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = "2017-11-08-preview"
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.device_api = DeviceApiOperations(
            self._client, self.config, self._serialize, self._deserialize)
