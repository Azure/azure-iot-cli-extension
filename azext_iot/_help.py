# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

from azure.cli.core.help_files import helps


helps['iot'] = """
    type: group
    short-summary: Manage Internet of Things (IoT) assets.
"""

helps['iot device'] = """
    type: group
    short-summary: Manage devices in your Azure IoT hub.
"""

helps['iot device create'] = """
    type: command
    short-summary: Create a device in an IoT hub.
"""

helps['iot device show'] = """
    type: command
    short-summary: Get the details of a device in an IoT hub.
"""

helps['iot device list'] = """
    type: command
    short-summary: List devices in an IoT hub.
"""

helps['iot device update'] = """
    type: command
    short-summary: Update device with the specified options.
                   Use --set followed by a list of parameters for updating your device.
                   Leverage parameters returned from 'device show'.
    examples:
    - name: Turn on edge capabilities for device
      text: >
        az iot device update -d mydevice -n myhub --set capabilities.iotEdge=true
    - name: Disable device status
      text: >
        az iot device update -d mydevice -n myhub --set status=disabled
"""

helps['iot device delete'] = """
    type: command
    short-summary: Delete a device in an IoT hub.
"""

helps['iot device twin'] = """
    type: group
    short-summary: Manage device twins in your Azure IoT hub.
"""

helps['iot device twin show'] = """
    type: command
    short-summary: Get a device twin definition.
"""

helps['iot device twin update'] = """
    type: command
    short-summary: Update device twin definition.
                   Use --set followed by a list of parameters for updating your device.
                   Leverage parameters returned from 'device twin show'.
    examples:
    - name: Add tags and nested property to device twin
      text: >
        az iot device twin update --device-id mydevice --hub-name myhub --set tags='{"location":{"region":"US"}}'
"""

helps['iot device module'] = """
    type: command
    short-summary: Manage device modules in an IoT hub.
"""

helps['iot device module create'] = """
    type: command
    short-summary: Create a module on target device in an IoT hub.
"""

helps['iot device module show'] = """
    type: command
    short-summary: Get the details of a device module in an IoT hub.
"""

helps['iot device module list'] = """
    type: command
    short-summary: List modules of an edge device in an IoT hub.
"""

helps['iot device module update'] = """
    type: command
    short-summary: Update device with the specified options.
                   Use --set followed by a list of parameters for updating your device.
                   Leverage parameters returned from 'device module show'.
    examples:
    - name: Change module authentication from x509 thumbprint to autogenerated symmetric keys.
      text: >
        az iot device module update --device-id mydevice --hub-name myhub --module-id mymodule
        --set authentication.type=sas authentication.symmetricKey.primaryKey='' authentication.symmetricKey.secondaryKey=''
"""

helps['iot device module delete'] = """
    type: command
    short-summary: Delete a module from an edge device in an IoT hub.
"""

helps['iot device module twin show'] = """
    type: command
    short-summary: Get a module twin definition.
"""

helps['iot device module twin update'] = """
    type: command
    short-summary: Update module twin definition.
                   Use --set followed by a list of parameters for updating your device.
                   Leverage parameters returned from 'device module twin show'.
    examples:
    - name: Add desired properties to module twin
      text: >
        az iot device module twin update -d mydevice -n myhub -m mymod --set
        properties.desired='{"conditions":{"temperature":{"warning":70, "critical":100}}}'
"""

helps['iot device module twin replace'] = """
    type: command
    short-summary: Replace module twin definition with target json.
                   Input json directly or use a file path.
    examples:
    - name: Replace module twin with file contents
      text: >
        az iot device module twin replace -d mydevice -n myhub -m mymod -j ../mymodtwin.json
"""

helps['iot device method invoke'] = """
    type: command
    short-summary: Invoke method on device.
"""

helps['iot device simulate'] = """
    type: command
    short-summary: Simulate a device on your Azure IoT hub.
    long-summary: EXPERIMENTAL. Relies on IoT Device SDK.
"""

helps['iot device message send'] = """
    type: command
    short-summary: Send a device-to-cloud message.
    long-summary: EXPERIMENTAL. Relies on IoT Device SDK.
    examples:
        - name: Send a device-to-cloud message to an IoT Hub with a default message using amqp, mqtt or http.
          text: >
            az iot device message send --hub-name MyIotHub --device-id MyDevice --protocol mqtt
        - name: Send a device-to-cloud message to an IoT Hub with a custom message.
          text: >
            az iot device message send --hub-name MyIotHub --device-id MyDevice --data "Custom Message"
"""

helps['iot configuration'] = """
    type: group
    short-summary: Manage Edge configurations in your Azure IoT hub.
"""

helps['iot configuration create'] = """
    type: command
    short-summary: Create an edge configuration in the target IoT hub.
                   Content json must have root of 'content' like {"content":{...}}.
    examples:
    - name: Create configuration with condition that device is in building 9 and environment is test.
      text: >
        az iot configuration create -c myconfig -n myhub --content ../mycontent.json
        --target-condition "tags.building=9 and tags.environment='test'"
"""

helps['iot configuration show'] = """
    type: command
    short-summary: Get the details of an edge configuration in an IoT hub.
"""

helps['iot configuration list'] = """
    type: command
    short-summary: List edge configurations in an IoT hub.
"""

helps['iot configuration update'] = """
    type: command
    short-summary: Update an edge configuration with the specified options.
                   Use --set followed by a list of parameters for updating your device.
                   Leverage parameters returned from 'configuration show'.
    examples:
    - name: Alter the priority of a configuration and update the targetCondition
      text: >
        az iot configuration update -c myconfig -n myhub --set priority=10
        targetCondition="tags.building=43 and tags.environment='dev'"
"""

helps['iot configuration delete'] = """
    type: command
    short-summary: Delete an edge configuration from an IoT hub.
"""

helps['iot configuration apply'] = """
    type: command
    short-summary: Apply configuration to a single device in IoT hub.
                   Content json must have root of 'content' or 'moduleContent'.
                   Like {"content":{...}} or {"moduleContent":{...}}
    examples:
    - name: Test configuration while in development
      text: >
        az iot configuration apply --hub-name myhub --device-id mydevice --content ../mycontent.json
"""

helps['iot hub message send'] = """
    type: command
    short-summary: Send a cloud-to-device message.
    long-summary: EXPERIMENTAL. Relies on IoT Device SDK.
"""

helps['iot sas'] = """
    type: command
    short-summary: Generate a shared access signature token for a target hub or device.
"""

helps['iot query'] = """
    type: command
    short-summary: Query an IoT hub to retrieve information regarding device and module twins using a
                   SQL-like language. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
                   for more information.
"""
