# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RegenerateDeviceKeyError(Model):
    """RegenerateDeviceKeyError.

    :param id: The unique identifier of the device.
    :type id: str
    :param module_id: The unique identifier of the module.
    :type module_id: str
    :param error_code: The error code. Possible values include:
     'InvalidErrorCode', 'GenericBadRequest', 'InvalidProtocolVersion',
     'DeviceInvalidResultCount', 'InvalidOperation', 'ArgumentInvalid',
     'ArgumentNull', 'IotHubFormatError',
     'DeviceStorageEntitySerializationError', 'BlobContainerValidationError',
     'ImportWarningExistsError', 'InvalidSchemaVersion',
     'DeviceDefinedMultipleTimes', 'DeserializationError',
     'BulkRegistryOperationFailure', 'DefaultStorageEndpointNotConfigured',
     'InvalidFileUploadCorrelationId', 'ExpiredFileUploadCorrelationId',
     'InvalidStorageEndpoint', 'InvalidMessagingEndpoint',
     'InvalidFileUploadCompletionStatus', 'InvalidStorageEndpointOrBlob',
     'RequestCanceled', 'InvalidStorageEndpointProperty', 'EtagDoesNotMatch',
     'RequestTimedOut', 'UnsupportedOperationOnReplica', 'NullMessage',
     'ConnectionForcefullyClosedOnNewConnection', 'InvalidDeviceScope',
     'ConnectionForcefullyClosedOnFaultInjection',
     'ConnectionRejectedOnFaultInjection', 'InvalidEndpointAuthenticationType',
     'ManagedIdentityNotEnabled', 'EnforceDeviceHISCompliantKey',
     'EnforceModuleHISCompliantKey', 'InvalidPolicyKey',
     'BulkRegenerateDeviceKeyOperationFailure', 'InvalidRouteTestInput',
     'InvalidSourceOnRoute', 'RoutingNotEnabled',
     'InvalidContentEncodingOrType', 'InvalidEndorsementKey',
     'InvalidRegistrationId', 'InvalidStorageRootKey',
     'InvalidEnrollmentGroupId', 'TooManyEnrollments',
     'RegistrationIdDefinedMultipleTimes', 'CustomAllocationFailed',
     'CustomAllocationIotHubNotSpecified',
     'CustomAllocationUnauthorizedAccess', 'CannotRegisterModuleToModule',
     'TenantHubRoutingNotEnabled', 'InvalidConfigurationTargetCondition',
     'InvalidConfigurationContent',
     'CannotModifyImmutableConfigurationContent',
     'InvalidConfigurationCustomMetricsQuery', 'InvalidPnPInterfaceDefinition',
     'InvalidPnPDesiredProperties', 'InvalidPnPReportedProperties',
     'InvalidPnPWritableReportedProperties', 'InvalidDigitalTwinJsonPatch',
     'InvalidDigitalTwinPayload', 'InvalidDigitalTwinPatch',
     'InvalidDigitalTwinPatchPath', 'GenericUnauthorized', 'IotHubNotFound',
     'IotHubUnauthorizedAccess', 'IotHubUnauthorized', 'ElasticPoolNotFound',
     'SystemModuleModifyUnauthorizedAccess', 'GenericForbidden',
     'IotHubSuspended', 'IotHubQuotaExceeded', 'JobQuotaExceeded',
     'DeviceMaximumQueueDepthExceeded', 'IotHubMaxCbsTokenExceeded',
     'DeviceMaximumActiveFileUploadLimitExceeded',
     'DeviceMaximumQueueSizeExceeded', 'RoutingEndpointResponseForbidden',
     'InvalidMessageExpiryTime', 'OperationNotAvailableInCurrentTier',
     'KeyEncryptionKeyRevoked', 'DeviceDisabled',
     'DeviceMaximumInflightMethodExceeded', 'DeviceModelMaxPropertiesExceeded',
     'DeviceModelMaxIndexablePropertiesExceeded', 'IotDpsSuspended',
     'IotDpsSuspending', 'GenericNotFound', 'DeviceNotFound', 'JobNotFound',
     'QuotaMetricNotFound', 'SystemPropertyNotFound', 'AmqpAddressNotFound',
     'RoutingEndpointResponseNotFound', 'CertificateNotFound',
     'ElasticPoolTenantHubNotFound', 'ModuleNotFound',
     'AzureTableStoreNotFound', 'IotHubFailingOver', 'FeatureNotSupported',
     'DigitalTwinInterfaceNotFound', 'QueryStoreClusterNotFound',
     'DeviceNotOnline', 'DeviceConnectionClosedRemotely', 'EnrollmentNotFound',
     'DeviceRegistrationNotFound', 'AsyncOperationNotFound',
     'EnrollmentGroupNotFound', 'DeviceRecordNotFound', 'GroupRecordNotFound',
     'DeviceGroupNotFound', 'ProvisioningSettingsNotFound',
     'ProvisioningRecordNotFound', 'LinkedHubNotFound',
     'CertificateAuthorityNotFound', 'ConfigurationNotFound', 'GroupNotFound',
     'DigitalTwinModelNotFound', 'InterfaceNameModelNotFound',
     'PurchaseNotFound', 'OfferNotFound', 'OfferStopSell',
     'PurchaseNotValidated', 'GenericMethodNotAllowed',
     'OperationNotAllowedInCurrentState', 'ImportDevicesNotSupported',
     'BulkAddDevicesNotSupported', 'GenericConflict', 'DeviceAlreadyExists',
     'LinkCreationConflict', 'CallbackSubscriptionConflict',
     'ModelAlreadyExists', 'DeviceLocked', 'DeviceJobAlreadyExists',
     'JobAlreadyExists', 'EnrollmentConflict', 'EnrollmentGroupConflict',
     'RegistrationStatusConflict', 'DeviceRecordConflict',
     'GroupRecordConflict', 'DeviceGroupConflict',
     'ProvisioningSettingsConflict', 'ProvisioningRecordConflict',
     'LinkedHubConflict', 'CertificateAuthorityConflict',
     'ModuleAlreadyExistsOnDevice', 'ConfigurationAlreadyExists',
     'ApplyConfigurationAlreadyInProgressOnDevice',
     'DigitalTwinModelAlreadyExists',
     'DigitalTwinModelExistsWithOtherModelType',
     'InterfaceNameModelAlreadyExists', 'PurchaseAlreadyExists',
     'GenericPreconditionFailed', 'PreconditionFailed',
     'DeviceMessageLockLost', 'JobRunPreconditionFailed',
     'InflightMessagesInLink', 'GenericRequestEntityTooLarge',
     'MessageTooLarge', 'TooManyDevices', 'TooManyModulesOnDevice',
     'ConfigurationCountLimitExceeded', 'DigitalTwinModelCountLimitExceeded',
     'InterfaceNameCompressionModelCountLimitExceeded',
     'GenericUnsupportedMediaType', 'IncompatibleDataType',
     'GenericTooManyRequests', 'ThrottlingException',
     'ThrottleBacklogLimitExceeded', 'ThrottlingBacklogTimeout',
     'ThrottlingMaxActiveJobCountExceeded', 'DeviceThrottlingLimitExceeded',
     'ClientClosedRequest', 'GenericServerError', 'ServerError',
     'JobCancelled', 'StatisticsRetrievalError', 'ConnectionForcefullyClosed',
     'InvalidBlobState', 'BackupTimedOut', 'AzureStorageTimeout',
     'GenericTimeout', 'InvalidThrottleParameter', 'EventHubLinkAlreadyClosed',
     'ReliableBlobStoreError', 'RetryAttemptsExhausted',
     'AzureTableStoreError', 'CheckpointStoreNotFound',
     'DocumentDbInvalidReturnValue', 'ReliableDocDbStoreStoreError',
     'ReliableBlobStoreTimeoutError', 'ConfigReadFailed',
     'InvalidContainerReceiveLink', 'InvalidPartitionEpoch', 'RestoreTimedOut',
     'StreamReservationFailure', 'SerializationError',
     'InvalidStorePartitionKey', 'UnexpectedPropertyValue',
     'OrchestrationOperationFailed', 'ModelRepoEndpointError',
     'ResolutionError', 'UnableToFetchCredentials', 'UnableToFetchTenantInfo',
     'UnableToShareIdentity', 'UnableToExpandDiscoveryInfo',
     'UnableToExpandComponentInfo', 'UnableToCompressComponentInfo',
     'UnableToCompressDiscoveryInfo', 'OrphanDiscoveryDocument',
     'GenericBadGateway', 'InvalidResponseWhileProxying',
     'GenericServiceUnavailable', 'ServiceUnavailable', 'PartitionNotFound',
     'IotHubActivationFailed', 'ServerBusy', 'IotHubRestoring',
     'ReceiveLinkOpensThrottled', 'ConnectionUnavailable', 'DeviceUnavailable',
     'ConfigurationNotAvailable', 'GroupNotAvailable',
     'HostingServiceNotAvailable', 'PurchaseNotAvailable',
     'GenericGatewayTimeout', 'GatewayTimeout'
    :type error_code: str or ~service.models.enum
    :param error_status: The details of the error.
    :type error_status: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'module_id': {'key': 'moduleId', 'type': 'str'},
        'error_code': {'key': 'errorCode', 'type': 'str'},
        'error_status': {'key': 'errorStatus', 'type': 'str'},
    }

    def __init__(self, *, id: str=None, module_id: str=None, error_code=None, error_status: str=None, **kwargs) -> None:
        super(RegenerateDeviceKeyError, self).__init__(**kwargs)
        self.id = id
        self.module_id = module_id
        self.error_code = error_code
        self.error_status = error_status
