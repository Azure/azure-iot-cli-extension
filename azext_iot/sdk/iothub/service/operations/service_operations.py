# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import uuid
from msrest.pipeline import ClientRawResponse
from msrestazure.azure_exceptions import CloudError

from .. import models


class ServiceOperations(object):
    """ServiceOperations operations.

    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    """

    models = models

    def __init__(self, client, config, serializer, deserializer):

        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer

        self.config = config

    def bulk_regenerate_device_key_method(
            self, policy_key=None, devices=None, custom_headers=None, raw=False, **operation_config):
        """Bulk regenerate device keys to be HIS compliant.

        :param policy_key: Device secret to regenerate. Possible values
         include: 'Unknown', 'primaryKey', 'secondaryKey', 'both'
        :type policy_key: str or ~service.models.enum
        :param devices: List of devices to have secrets regenerated with HIS
         compliant secrets
        :type devices: list[~service.models.RegenerateDeviceKey]
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: BulkRegenerateKeyResult or ClientRawResponse if raw=true
        :rtype: ~service.models.BulkRegenerateKeyResult or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        """
        regenerate_device_keys_request = models.BulkRegenerateDeviceKey(policy_key=policy_key, devices=devices)

        # Construct URL
        url = self.bulk_regenerate_device_key_method.metadata['url']

        # Construct parameters
        query_parameters = {}

        # Construct headers
        header_parameters = {}
        header_parameters['Accept'] = 'application/json'
        header_parameters['Content-Type'] = 'application/json; charset=utf-8'
        if self.config.generate_client_request_id:
            header_parameters['x-ms-client-request-id'] = str(uuid.uuid1())
        if custom_headers:
            header_parameters.update(custom_headers)
        if self.config.accept_language is not None:
            header_parameters['accept-language'] = self._serialize.header("self.config.accept_language", self.config.accept_language, 'str')

        # Construct body
        body_content = self._serialize.body(regenerate_device_keys_request, 'BulkRegenerateDeviceKey')

        # Construct and send request
        request = self._client.post(url, query_parameters, header_parameters, body_content)
        response = self._client.send(request, stream=False, **operation_config)

        if response.status_code not in [200, 207, 400]:
            exp = CloudError(response)
            exp.request_id = response.headers.get('x-ms-request-id')
            raise exp

        deserialized = None

        if response.status_code == 200:
            deserialized = self._deserialize('BulkRegenerateKeyResult', response)
        if response.status_code == 207:
            deserialized = self._deserialize('BulkRegenerateKeyResult', response)
        if response.status_code == 400:
            deserialized = self._deserialize('BulkRegenerateKeyResult', response)

        if raw:
            client_raw_response = ClientRawResponse(deserialized, response)
            return client_raw_response

        return deserialized
    bulk_regenerate_device_key_method.metadata = {'url': '/devices/keys/regenerate'}
