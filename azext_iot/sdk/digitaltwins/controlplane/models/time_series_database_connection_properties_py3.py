# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TimeSeriesDatabaseConnectionProperties(Model):
    """Properties of a time series database connection resource.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: AzureDataExplorerConnectionProperties

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar provisioning_state: The provisioning state. Possible values include:
     'Provisioning', 'Deleting', 'Succeeded', 'Failed', 'Canceled', 'Deleted',
     'Warning', 'Suspending', 'Restoring', 'Moving', 'Disabled'
    :vartype provisioning_state: str or
     ~controlplane.models.TimeSeriesDatabaseConnectionState
    :param connection_type: Required. Constant filled by server.
    :type connection_type: str
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'connection_type': {'required': True},
    }

    _attribute_map = {
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'connection_type': {'key': 'connectionType', 'type': 'str'},
    }

    _subtype_map = {
        'connection_type': {'AzureDataExplorer': 'AzureDataExplorerConnectionProperties'}
    }

    def __init__(self, **kwargs) -> None:
        super(TimeSeriesDatabaseConnectionProperties, self).__init__(**kwargs)
        self.provisioning_state = None
        self.connection_type = None
