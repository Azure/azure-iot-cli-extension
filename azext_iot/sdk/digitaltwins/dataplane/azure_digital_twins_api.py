# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.digital_twin_models_operations import DigitalTwinModelsOperations
from .operations.query_operations import QueryOperations
from .operations.digital_twins_operations import DigitalTwinsOperations
from .operations.event_routes_operations import EventRoutesOperations
from . import models
from azext_iot.constants import USER_AGENT


class AzureDigitalTwinsAPIConfiguration(AzureConfiguration):
    """Configuration for AzureDigitalTwinsAPI
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = 'http://localhost'

        super(AzureDigitalTwinsAPIConfiguration, self).__init__(base_url)

        self.add_user_agent('azuredigitaltwinsapi/{}'.format(VERSION))
        self.add_user_agent(USER_AGENT)

        self.credentials = credentials


class AzureDigitalTwinsAPI(SDKClient):
    """A service for managing and querying digital twins and digital twin models.

    :ivar config: Configuration for client.
    :vartype config: AzureDigitalTwinsAPIConfiguration

    :ivar digital_twin_models: DigitalTwinModels operations
    :vartype digital_twin_models: digitaltwins.operations.DigitalTwinModelsOperations
    :ivar query: Query operations
    :vartype query: digitaltwins.operations.QueryOperations
    :ivar digital_twins: DigitalTwins operations
    :vartype digital_twins: digitaltwins.operations.DigitalTwinsOperations
    :ivar event_routes: EventRoutes operations
    :vartype event_routes: digitaltwins.operations.EventRoutesOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        self.config = AzureDigitalTwinsAPIConfiguration(credentials, base_url)
        super(AzureDigitalTwinsAPI, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2020-10-31'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.digital_twin_models = DigitalTwinModelsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.query = QueryOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.digital_twins = DigitalTwinsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.event_routes = EventRoutesOperations(
            self._client, self.config, self._serialize, self._deserialize)
