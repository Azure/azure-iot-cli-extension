# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .certificate_authority_py3 import CertificateAuthority


class PrivatePreviewManagedCertificateAuthority(CertificateAuthority):
    """PrivatePreviewManagedCertificateAuthority.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The certificate authority identifier. A case-insensitive string
     (up to 64 characters long) of ASCII 7-bit alphanumeric
     characters plus certain special characters . _ -. No special characters
     allowed at start or end.
    :vartype id: str
    :ivar created_date_time_utc: The DateTime this resource was created in
     UTC.
    :vartype created_date_time_utc: datetime
    :ivar last_updated_date_time_utc: The DateTime this resource was last
     updated in UTC.
    :vartype last_updated_date_time_utc: datetime
    :ivar etag: The ETag of the device record.
    :vartype etag: str
    :ivar certificates: The certificates affiliated with this Certificate
     Authority.
    :vartype certificates: list[~dps.models.CertificateWithMetadata]
    :param certificate_authority_type: Required. Constant filled by server.
    :type certificate_authority_type: str
    """

    _validation = {
        'id': {'readonly': True},
        'created_date_time_utc': {'readonly': True},
        'last_updated_date_time_utc': {'readonly': True},
        'etag': {'readonly': True},
        'certificates': {'readonly': True},
        'certificate_authority_type': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'created_date_time_utc': {'key': 'createdDateTimeUtc', 'type': 'iso-8601'},
        'last_updated_date_time_utc': {'key': 'lastUpdatedDateTimeUtc', 'type': 'iso-8601'},
        'etag': {'key': 'etag', 'type': 'str'},
        'certificates': {'key': 'certificates', 'type': '[CertificateWithMetadata]'},
        'certificate_authority_type': {'key': 'certificateAuthorityType', 'type': 'str'},
    }

    def __init__(self, **kwargs) -> None:
        super(PrivatePreviewManagedCertificateAuthority, self).__init__(**kwargs)
        self.certificate_authority_type = 'PrivatePreviewManagedCertificateAuthority'
