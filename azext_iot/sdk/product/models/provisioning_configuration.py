# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ProvisioningConfiguration(Model):
    """ProvisioningConfiguration.

    :param type: Possible values include: 'ConnectionString', 'X509', 'TPM',
     'SymmetricKey'
    :type type: str or ~product.models.enum
    :param device_id:
    :type device_id: str
    :param dps_registration_id:
    :type dps_registration_id: str
    :param region: Possible values include: 'Unknown', 'CentralUS',
     'CentralUSEUAP', 'EastUS', 'EastUS2EUAP', 'JapanEast', 'NorthEurope',
     'WestUS', 'WestUS2'
    :type region: str or ~product.models.enum
    :param device_connection_string:
    :type device_connection_string: str
    :param x509_enrollment_information:
    :type x509_enrollment_information: ~product.models.X509Enrollment
    :param symmetric_key_enrollment_information:
    :type symmetric_key_enrollment_information:
     ~product.models.SymmetricKeyEnrollment
    :param tpm_enrollment_information:
    :type tpm_enrollment_information: ~product.models.TpmEnrollment
    """

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'device_id': {'key': 'deviceId', 'type': 'str'},
        'dps_registration_id': {'key': 'dpsRegistrationId', 'type': 'str'},
        'region': {'key': 'region', 'type': 'str'},
        'device_connection_string': {'key': 'deviceConnectionString', 'type': 'str'},
        'x509_enrollment_information': {'key': 'x509EnrollmentInformation', 'type': 'X509Enrollment'},
        'symmetric_key_enrollment_information': {'key': 'symmetricKeyEnrollmentInformation', 'type': 'SymmetricKeyEnrollment'},
        'tpm_enrollment_information': {'key': 'tpmEnrollmentInformation', 'type': 'TpmEnrollment'},
    }

    def __init__(self, **kwargs):
        super(ProvisioningConfiguration, self).__init__(**kwargs)
        self.type = kwargs.get('type', None)
        self.device_id = kwargs.get('device_id', None)
        self.dps_registration_id = kwargs.get('dps_registration_id', None)
        self.region = kwargs.get('region', None)
        self.device_connection_string = kwargs.get('device_connection_string', None)
        self.x509_enrollment_information = kwargs.get('x509_enrollment_information', None)
        self.symmetric_key_enrollment_information = kwargs.get('symmetric_key_enrollment_information', None)
        self.tpm_enrollment_information = kwargs.get('tpm_enrollment_information', None)
