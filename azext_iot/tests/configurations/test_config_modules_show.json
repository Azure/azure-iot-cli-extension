{
    "content": {
        "modulesContent": {
            "$edgeAgent": {
                "properties.desired": {
                    "modules": {
                        "filtermodule": {
                            "restartPolicy": "always",
                            "settings": {
                                "createOptions": "",
                                "image": "microsoft/filtermodule:0.0.1-amd64"
                            },
                            "status": "running",
                            "type": "docker",
                            "version": "1.0"
                        },
                        "temp-sensor-module": {
                            "restartPolicy": "always",
                            "settings": {
                                "createOptions": "",
                                "image": "microsoft/azureiotedge-simulated-temperature-sensor"
                            },
                            "status": "running",
                            "type": "docker",
                            "version": "1.0"
                        }
                    },
                    "runtime": {
                        "settings": {
                            "loggingOptions": "",
                            "minDockerVersion": "v1.25"
                        },
                        "type": "docker"
                    },
                    "schemaVersion": "1.0",
                    "systemModules": {
                        "edgeAgent": {
                            "settings": {
                                "createOptions": "",
                                "image": "microsoft/azureiotedge-agent:1.0-preview"
                            },
                            "type": "docker"
                        },
                        "edgeHub": {
                            "restartPolicy": "always",
                            "settings": {
                                "createOptions": "",
                                "image": "microsoft/azureiotedge-hub:1.0-preview"
                            },
                            "status": "running",
                            "type": "docker"
                        }
                    }
                }
            },
            "$edgeHub": {
                "properties.desired": {
                    "routes": {
                        "filterToIoTHub": "FROM /messages/modules/filtermodule/outputs/output1 INTO $upstream",
                        "sensorToFilter": "FROM /messages/modules/temp-sensor-module/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/filtermodule/inputs/input1\")"
                    },
                    "schemaVersion": "1.0",
                    "storeAndForwardConfiguration": {
                        "timeToLiveSecs": 7200
                    }
                }
            },
            "filtermodule": {
                "properties.desired": {
                    "TemperatureThreshold": 21,
                    "schemaVersion": "1.0"
                }
            }
        }
    },
    "contentType": null,
    "etag": "MQ==",
    "id": "c12",
    "labels": {
        "key": "value"
    },
    "metrics": {
        "queries": {
            "mymetric": "select deviceId from devices where properties.reported.lastDesiredStatus.code = 200"
        },
        "results": {}
    },
    "priority": 0,
    "schemaVersion": "2.0",
    "systemMetrics": {
        "queries": {
            "appliedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[c12]].status = 'Applied'",
            "reportedFailedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[c12]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code != 200",
            "reportedSuccessfulCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[c12]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code = 200",
            "targetedCount": ""
        },
        "results": {}
    },
    "targetCondition": ""
}
