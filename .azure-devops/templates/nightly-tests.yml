parameters:
- name: pythonVersion
  type: string
  default: '3.6.x'
- name: architecture
  type: string
  default: 'x64'
- name: azureCLIVersion
  type: string
  default: released
  values:
  - min
  - released
  - edge
- name: num_threads
  type: number
  default: 6
- name: num_reruns
  type: number
  default: 2
- name: reruns_delay
  type: number
  default: 60

steps:
  - template: setup-dev-test-env.yml
    parameters:
      architecture: ${{ parameters.architecture }}
      pythonVersion: ${{ parameters.pythonVersion }}
      azureCLIVersion: ${{ parameters.azureCLIVersion }}

  - template: set-testenv-sentinel.yml

  - script: |
      pytest -vv azext_iot/tests -k "_unit" --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-unit.xml
    displayName: 'All unit tests'
    env:
      COVERAGE_FILE: .coverage.all

  - task: AzureCLI@2
    continueOnError: true
    displayName: 'IoTHub Devices, jobs, messaging and modules integration tests'
    inputs:
      azureSubscription: az_cli_nightly_conn
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        export COVERAGE_FILE=.coverage.all
        pytest -vv azext_iot/tests/iothub/devices azext_iot/tests/iothub/jobs azext_iot/tests/iothub/messaging azext_iot/tests/iothub/modules -k "_int" --dist=loadfile -n ${{ parameters.num_threads }} --reruns ${{ parameters.num_reruns }} --reruns-delay ${{ parameters.reruns_delay }} --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-int.xml


  - task: AzureCLI@2
    continueOnError: true
    displayName: 'Remaining IoTHub integration tests'
    inputs:
      azureSubscription: az_cli_nightly_conn
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        export COVERAGE_FILE=.coverage.all
        pytest -vv azext_iot/tests/iothub --ignore=azext_iot/tests/iothub/devices --ignore=azext_iot/tests/iothub/jobs --ignore=azext_iot/tests/iothub/messaging --ignore=azext_iot/tests/iothub/modules -k "_int" --dist=loadfile -n ${{ parameters.num_threads }} --reruns ${{ parameters.num_reruns }} --reruns-delay ${{ parameters.reruns_delay }} --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-int.xml --deselect=azext_iot/tests/iothub/test_iothub_discovery_int.py::TestIoTHubDiscovery::test_iothub_targets

  - task: AzureCLI@2
    continueOnError: true
    displayName: 'Non IoTHub integration tests'
    inputs:
      azureSubscription: az_cli_nightly_conn
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        export COVERAGE_FILE=.coverage.all
        pytest -vv azext_iot/tests -k "_int" --ignore=azext_iot/tests/iothub --dist=loadfile -n ${{ parameters.num_threads }} --reruns ${{ parameters.num_reruns }} --reruns-delay ${{ parameters.reruns_delay }} --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-int.xml

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: .coverage.all
      publishLocation: 'Container' 
      artifactName: 'coverage'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python ${{ parameters.pythonVersion }} on OS $(Agent.OS)'
      searchFolder: '$(System.DefaultWorkingDirectory)'
