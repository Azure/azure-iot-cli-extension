parameters:
  pythonVersion: '3.6.x'
  architecture: 'x64'
  runUnitTests: 'false'
  runIntTests: 'true'
  runWithAzureCliReleased: 'true'
  path: 'azext_iot/tests'
  name: 'All'

steps:
  - template: setup-dev-test-env.yml
    parameters:
      architecture: ${{ parameters.architecture }}
      pythonVersion: ${{ parameters.pythonVersion }}
      runWithAzureCliReleased: ${{ parameters.runWithAzureCliReleased }}

  - template: set-testenv-sentinel.yml

  - ${{ if eq(parameters.runIntTests, 'true') }}:
    - task: AzureCLI@2
      displayName: '${{ parameters.name }} integration tests'
      inputs:
        azureSubscription: AzIoTCLIService
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: pytest -vv ${{ parameters.path }} -k "_int"  --junitxml=junit/test-iotext-int-${{ parameters.name }}.xml

  - ${{ if eq(parameters.runUnitTests, 'true') }}:
    - script: pytest -vv ${{ parameters.path }} -k "_unit" --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-unit-${{ parameters.name }}.xml --cov-report=xml
      displayName: '${{ parameters.name }} unit tests'
  
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov'
        additionalCodeCoverageFiles: '$(System.DefaultWorkingDirectory)/htmlcov/**/*.*'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish ${{ parameters.name }} test results for Python ${{ parameters.pythonVersion }} on OS $(Agent.OS)'
      searchFolder: '$(System.DefaultWorkingDirectory)'
