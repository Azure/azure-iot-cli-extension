trigger:
- dev
- master

pr:
- dev
- master

variables:
  iot_ext_package: azure-iot

jobs:

- job: 'Build_Publish_Azure_IoT_CLI_Extension'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x'
      architecture: 'x64'

  - template: templates/setup-ci-machine.yml
  - template: templates/build-publish-azure-iot-cli-extension.yml

- job: 'Build_Publish_Azure_CLI_Test_SDK'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x'
      architecture: 'x64'

  - template: templates/setup-ci-machine.yml
  - template: templates/build-publish-azure-cli-test-sdk.yml

- job: 'Run_Tests_Windows'
  dependsOn : [ 'Build_Publish_Azure_CLI_Test_SDK', 'Build_Publish_Azure_IoT_CLI_Extension']
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script : 'ren "C:\Program Files\Common Files\AzureCliExtensionDirectory" "C:\Program Files\Common Files\AzureCliExtensionDirectory1"'
  
  - template: templates/run-tests.yml
    parameters:
      pythonVersion: '3.x'

- job: 'Run_Tests_Windows_Azure_CLI_Released_Version'
  dependsOn : [Build_Publish_Azure_CLI_Test_SDK, 'Build_Publish_Azure_IoT_CLI_Extension']
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - template: templates/run-tests.yml
    parameters:
      pythonVersion: '3.x'
      runWithAzureCliReleased: 'false'

- job: 'Run_Tests_Ubuntu'
  dependsOn: ['Build_Publish_Azure_CLI_Test_SDK','Build_Publish_Azure_IoT_CLI_Extension']
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6.x'
      Python37:
        python.version: '3.7.x'
      Python38:
        python.version: '3.8.x'
    maxParallel: 4

  steps:
  - bash: sudo rm -R -f /usr/local/lib/azureExtensionDir

  - template: templates/run-tests.yml
    parameters:
      pythonVersion: '$(python.version)'

- job: 'Run_Tests_Mac'
  dependsOn: ['Build_Publish_Azure_CLI_Test_SDK','Build_Publish_Azure_IoT_CLI_Extension']
  pool:
    vmImage: 'macOS-10.14'

  steps:
  - template: templates/run-tests.yml
    parameters:
      pythonVersion: '3.x'

- job: 'Run_Style_Check'
  dependsOn: ['Build_Publish_Azure_CLI_Test_SDK','Build_Publish_Azure_IoT_CLI_Extension']
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - template: templates/install-azure-cli-released.yml
  - template: templates/setup-ci-machine.yml
  - template: templates/download-install-local-azure-iot-cli-extension-with-pip.yml

  - script: 'pylint azext_iot/ --rcfile=.pylintrc'
    displayName: 'Evaluate with pylint'
    workingDirectory: '.'

  - script: 'flake8 azext_iot/ --statistics --config=setup.cfg'
    displayName: 'Evaluate with flake8'
    workingDirectory: '.'

- job: 'Run_Core_Linter_and_HelpText_Check'
  dependsOn: ['Build_Publish_Azure_CLI_Test_SDK','Build_Publish_Azure_IoT_CLI_Extension']
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - template: templates/install-azure-cli-released.yml
  - template: templates/install-azdev.yml
  - template: templates/setup-ci-machine.yml # Likely temporary fix due to pkg_resources.ContextualVersionConflict from six ver 1.13.0 vs pinned 1.12.0
  - template: templates/download-install-local-azure-iot-cli-extension.yml

  - script: 'azdev cli-lint --ci --extensions $(iot_ext_package)'
    displayName: 'Evaluate with CLI core linter'
