# Required for schedule only trigger
trigger: none
pr: none

# Run nightly at midnight (Pacific).
schedules:
- cron: "0 7 * * *"
  displayName: Nightly Integration Build
  branches:
    include:
    - dev

parameters:
- name: vmImage
  type: string
  default: 'ubuntu-18.04'
  values:
  - 'ubuntu-18.04'
  - 'ubuntu-latest'
- name: pythonVersion
  type: string
  default: '3.8.x'
  values:
  - '3.6.x'
  - '3.8.x'
  - '3.9.x'
- name: architecture
  type: string
  default: 'x64'
- name: 'testCentral'
  type: boolean
  default: true
- name: 'testADT'
  type: boolean
  default: true
- name: 'testDPS'
  type: boolean
  default: true
- name: 'testHub'
  type: boolean
  default: true

variables:
  - group: aziotcli_test_nightly
  - name: pythonVersion
    value: ${{ parameters.pythonVersion }}
  - name: architecture
    value: ${{ parameters.architecture }}

stages:
  - stage: 'build'
    displayName: 'Build and Publish Artifacts'
    jobs:

    - job: 'Build_Publish_Azure_IoT_CLI_Extension'
      pool:
        vmImage: ${{ parameters.vmImage }}

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(pythonVersion)
          architecture: $(architecture)

      - template: templates/setup-ci-machine.yml

      - template: templates/build-publish-azure-iot-cli-extension.yml

    - job: 'Build_Publish_Azure_CLI_Test_SDK'
      pool:
        vmImage: ${{ parameters.vmImage }}

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(pythonVersion)
          architecture: $(architecture)

      - template: templates/setup-ci-machine.yml

      - template: templates/build-publish-azure-cli-test-sdk.yml

    - job: 'recordVersion'
      displayName: 'Install and verify version'
      dependsOn: [Build_Publish_Azure_IoT_CLI_Extension, Build_Publish_Azure_CLI_Test_SDK]
      steps:
      - template: templates/setup-dev-test-env.yml
        parameters:
          pythonVersion: $(pythonVersion)
          architecture: $(architecture)

      - template: templates/install-and-record-version.yml

  - stage: 'test_min'
    displayName: 'Run all tests with min CLI'
    pool:
      vmImage: ${{ parameters.vmImage }}
    dependsOn: build
    jobs:
    - template: templates/nightly-tests.yml
      parameters:
        azureCLIVersion: min
        pythonVersion: $(pythonVersion)
        testADT: ${{ parameters.testADT }}
        testCentral: ${{ parameters.testCentral }}
        testDPS: ${{ parameters.testDPS }}
        testHub: ${{ parameters.testHub }}

  - stage: 'test_msi'
    displayName: 'Run all tests against Windows MSI install'
    pool:
      vmImage: 'vs2017-win2016'
    dependsOn: test_min
    jobs:
    - template: templates/nightly-tests.yml
      parameters:
        azureCLIVersion: msi
        pythonVersion: $(pythonVersion)
        testADT: ${{ parameters.testADT }}
        testCentral: ${{ parameters.testCentral }}
        testDPS: ${{ parameters.testDPS }}
        testHub: ${{ parameters.testHub }}
          
  - stage: 'kpi'
    displayName: 'Build KPIs'
    dependsOn: [build, test_min, test_msi]
    jobs:
    - job: 'calculateCodeCoverage'
      displayName: 'Calculate distributed code coverage'
      steps:
      - template: templates/calculate-code-coverage.yml
        parameters:
          pythonVersion: $(pythonVersion)
          architecture: $(architecture)