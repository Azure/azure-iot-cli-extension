# Run nightly at midnight.
schedules:
- cron: "0 0 * * *"
  displayName: Nightly Integration Build
  branches:
    include:
    - dev

variables:
  pythonVersion: '3.6.x'
  architecture: 'x64'

stages:
  - stage: 'build'
    displayName: 'Build and Publish Artifacts'
    jobs:

    - job: 'Build_Publish_Azure_IoT_CLI_Extension'
      pool:
        vmImage: 'Ubuntu-16.04'

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(pythonVersion)
          architecture: $(architecture)

      - template: templates/setup-ci-machine.yml

      - template: templates/build-publish-azure-iot-cli-extension.yml

    - job: 'Build_Publish_Azure_CLI_Test_SDK'
      pool:
        vmImage: 'Ubuntu-16.04'

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(pythonVersion)
          architecture: $(architecture)

      - template: templates/setup-ci-machine.yml

      - template: templates/build-publish-azure-cli-test-sdk.yml

    - job: 'recordVersion'
      displayName: 'Install and verify version'
      dependsOn: [Build_Publish_Azure_IoT_CLI_Extension, Build_Publish_Azure_CLI_Test_SDK]
      steps:
      - template: templates/setup-dev-test-env.yml
        parameters:
          pythonVersion: $(pythonVersion)
          architecture: $(architecture)

      - template: templates/install-and-record-version.yml

  - stage: 'test'
    displayName: 'Run all tests'
    pool:
      vmImage: 'Ubuntu-16.04'
    dependsOn: build
    jobs:
    - job: 'azEdge'
      displayName: 'Test against edge AZ CLI'
      steps:
      - template: templates/nightly-tests.yml
        parameters:
          azureCLIVersion: 'edge'
    - job: 'azMin'
      dependsOn: 'azEdge'
      displayName: 'Test against minimum supported AZ CLI'
      steps:
      - template: templates/nightly-tests.yml
        parameters:
          azureCLIVersion: 'min'
          
  - stage: 'kpi'
    displayName: 'Build KPIs'
    dependsOn: [build, test]
    jobs:
    - job: 'calculateCodeCoverage'
      displayName: 'Calculate distributed code coverage'
      steps:
      - template: templates/calculate-code-coverage.yml
        parameters:
          pythonVersion: $(pythonVersion)
          architecture: $(architecture)

