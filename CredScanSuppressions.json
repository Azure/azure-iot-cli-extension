{
    "tool": "Credential Scanner",
    "suppressions": [
        {
            "file": "azext_iot\\operations\\_mqtt.py",
            "placeholder": "password=sas",
            "_justification": "Client device simulation requires a SAS key extracted from IoT Hub to be passed in MQTT lib."
        },
        {
            "file": "azext_iot\\tests\\iothub\\core\\test_iothub_discovery_unit.py",
            "placeholder": "SharedAccessKey=AB+c/+5nm2XpDXcffhnGhnxz/TVF4m5ag7AuVIGwchj=",
            "_justification": "Completely made up IoT Hub policy key for unit test."
        },
        {
            "file": "azext_iot\\tests\\dps\\core\\test_dps_discovery_unit.py",
            "placeholder": "SharedAccessKey=AB+c/+5nm2XpDXcffhnGhnxz/TVF4m5ag7AuVIGwchj=",
            "_justification": "Completely made up DPS policy key for unit test."
        },
        {
            "file": "azext_iot\\tests\\iothub\\core\\test_iot_hub_unit.py",
            "placeholder": "AB+c/+5nm2XpDXcffhnGhnxz/TVF4m5ag7AuVIGwchj=",
            "_justification": "Completely made up IoT Hub policy key for unit test."
        },
        {
            "file": "azext_iot\\tests\\iothub\\configurations\\test_edge_deployment.json",
            "_justification": "Completely made up deployment with fake container registry creds."
        },
        {
            "file": "azext_iot\\tests\\conftest.py",
            "_justification": "Completely made up keys for unit tests."
        },
        {
            "file": "azext_iot\\tests\\dps\\__init__.py",
            "placeholder": "cT/EXZvsplPEpT//p98Pc6sKh8mY3kYgSxavHwMkl7w=",
            "_justification": "Ensure made up endorsement key evaluates to the expected device key."
        },
        {
            "file": "azext_iot\\tests\\iothub\\core\\test_iot_ext_unit.py",
            "placeholder": "+XLy+MVZ+aTeOnVzN2kLeB16O+kSxmz6g3rS6fAf6rw=",
            "_justification": "Ensure made up policy key generates the proper SAS token."
        },
        {
            "file": "azext_iot\\tests\\central\\__init__.py",
            "placeholder": "ya9+G4ED+/g0BgLduhjETJnbeEWMl1HIUApWCCpGMAU=",
            "_justification": "Completely made up keys for IoT central integration tests."
        },
        {
            "file": "azext_iot\\tests\\central\\__init__.py",
            "placeholder": "D8jeWazxcCK+MAxrn9KlqDLb8trbuKs35KEbcLBnS48=",
            "_justification": "Completely made up keys for IoT central integration tests."
        },
        {
            "file": "azext_iot\\tests\\central\\__init__.py",
            "placeholder": "r9KdK+LBaLiZ0p+RfAVj6eu9umGE6VqJj+AMLHdw+io=",
            "_justification": "Completely made up keys for IoT central integration tests."
        },
        {
            "file": "azext_iot\\tests\\central\\__init__.py",
            "placeholder": "W7/4/oaMpA83RYfirH9vzic4ZeK2Piy0jO5rTOM5wxg=",
            "_justification": "Completely made up keys for IoT central integration tests."
        },
        {
            "file": "azext_iot\\tests\\central\\json\\x509_certiciate.pem",
            "_justification": "Completely made up x509 certificate for IoT central integration tests."
        },
        {
            "file": "azext_iot\\tests\\central\\json\\x509_verified_certiciate.pem",
            "_justification": "Completely made up x509 certificate for IoT central integration tests."
        }
    ]
}