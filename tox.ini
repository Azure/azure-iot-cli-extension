# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
skip_missing_interpreters = true
envlist =
    lint
    python-azcur-unit

[base]
distdir={toxworkdir}/build
deps =
    -r dev_requirements
description =
# py{x} determines python version for environment.
#    A valid interpreter must be installed (and added to PATH)
#    for each selected version, otherwise the run will be skipped
# az{x} determines:
#    {min} - minimum supported azure-cli
#    {cur} - latest released azure-cli
#    {dev} - installs azure-cli from ../azure-cli
# int/unit determines test suites to run
# list all available tox environments with: `tox -av`
    python: Local Python
    py38: Python 3.8
    py39: Python 3.9
    py310: Python 3.10
    py311: Python 3.11
    azmin: min azure-cli
    azcur: current azure-cli
    azdev: dev azure-cli
    int: Integration Tests
    unit: Unit Tests

[testenv:lint]
description = run linter
deps =
    {[base]deps}
    azure-cli
commands =
    flake8 azext_iot/ --statistics --config=setup.cfg
    pylint azext_iot/ --rcfile=.pylintrc

[testenv:py{thon,38,39,310,311}-az{min,cur,dev}-{int,unit}]
skip_install = True
description =
    {[base]description}
setenv =
    azext_iot_testrg=testrg
    PYTHONPATH={envsitepackagesdir}/azure-cli-extensions/azure-iot
passenv =
    azext_*
deps =
    # base deps
    {[base]deps}
    # azure-cli deps
    azmin: azure-cli==2.32.0
    azcur: azure-cli
    azdev: ../azure-cli/src/azure-cli
    azdev: ../azure-cli/src/azure-cli-core
    # azure cli test sdk
    azure-cli-testsdk
commands =
    python --version
    # install to tox extension dir
    pip install -U --target {envsitepackagesdir}/azure-cli-extensions/azure-iot .
    # validate az and extension version
    az -v
    # run tests
    # You can pass additional positional args to pytest using `-- {args}`
    unit: pytest -k _unit ./azext_iot/tests {posargs}
    int: pytest -k _int ./azext_iot/tests {posargs}

# tox-gh matrix (github action -> tox python environment)
[gh]
python =
    3.11 = py311-azcur-unit
    3.10 = py310-azcur-unit
    3.9 = py39-azcur-unit
    3.8 = lint, py38-azmin-unit

[testenv:{Central,ADT,DPS,Hub1,Hub2,ADU}-int]
skip_install = True
passenv =
    AZURE_TEST_RUN_LIVE=True
    azext_*
description =
    Central: IoT Central
    ADT: Digital Twin
    DPS: DPS
    Hub1: IoT Hub certificate, config, core, jobs, state
    Hub2: IoT Hub devices, message endpoints, messaging, and modules
    ADU: ADU
    {[base]description}
deps =
    # base deps
    {[base]deps}
    azure-cli
    # azure cli test sdk
    azure-cli-testsdk
setenv = 
    PYTHONPATH={envsitepackagesdir}/azure-cli-extensions/azure-iot
commands =
    python --version
    # install to tox extension dir
    pip install -U --target {envsitepackagesdir}/azure-cli-extensions/azure-iot .
    # validate az and extension version
    az -v
    # run tests
    # You can pass additional positional args to pytest using `-- {args}`
    Central: pytest -k _int.py ./azext_iot/tests/central {posargs}
    ADT: pytest -k _int.py ./azext_iot/tests/digitaltwins {posargs}
    DPS: pytest -k _int.py ./azext_iot/tests/dps {posargs}
    Hub1: pytest -k _int.py ./azext_iot/tests/iothub/certificate ./azext_iot/tests/iothub/configurations ./azext_iot/tests/iothub/core ./azext_iot/tests/iothub/jobs ./azext_iot/tests/iothub/state/ {posargs}
    Hub1: pytest -k _int.py ./azext_iot/tests/iothub/devices ./azext_iot/tests/iothub/messaging ./azext_iot/tests/iothub/modules ./azext_iot/tests/iothub/message_endpoint {posargs}
    ADU: pytest -k _int.py ./azext_iot/tests/deviceupdate {posargs}

[testenv:coverage]
description = run code coverage
deps =
    {[base]deps}
    azure-cli
    azure-cli-testsdk
commands =
    pytest -k _unit --cov=azext_iot --cov-report=json --cov-report=html ./azext_iot/tests